//===============================================
// RULES
//===============================================
html, body {
  font-smoothing: subpixel-antialiased;
  text-rendering: optimizeLegibility;
}
q {
  &:before {
    content: open-quote; 
  }
  &:after { 
    content: close-quote; 
  }
}
:lang(en) q { quotes: '“' '”'; }
:lang(fr) q { quotes: '«' '»'; }

p {
  hyphens: auto;
}

//===============================================
// MIXINS
//===============================================

//···············································
// Grid
//···············································
@function grid-units-h($q: 1) {
  @return $q * $base-unit * 1.1667; // px
}
@function grid-units-v($q: 1) {
  @return $q * $base-unit; // px
}
//···············································
// Baseline
//···············································
// based on a gist by Razvan Onofrei: https://gist.github.com/razwan/10662500
// see https://gist.github.com/jeromev/11301969
@mixin show-baseline($color: rgba(0, 0, 0, 0.1667)) {
  background-image: linear-gradient(
    to bottom, 
    $color 0%, 
    transparent 20%
  );
  background-size: 100% $base-unit;
  background-position: left top;
}
@mixin align-to-baseline($font-size: $base-font-size, $offset-top: 0, $offset-bottom: 0, $method: 2, $scale: $base-scale) {
  // number (integer) of base units that can fit the font-size
  $lines: ceil($font-size / $base-unit);
	// calculate the new line-height
	$line-height: $base-unit * $lines / $font-size;  // (em)
  @if ($font-size != $base-font-size) {
    // print the results
	  font-size: ($font-size / $base-font-size) + em;
	  line-height: $line-height + em;
  }
	$baseline-distance: ($line-height - $base-cap-ratio) / $scale;  // (em)
	
	$offset-top: $offset-top * $base-unit / $font-size;  // (em)
	$offset-bottom: $offset-bottom * $base-unit / $font-size;  // (em)
	
	// METHOD 1
	// this method can relatively move down elements you may not want to
	@if ($method == 1) {
	  position: relative;
	  top: $baseline-distance + $offset-top + em;
	  padding-bottom: $offset-bottom + em;
	}
	// METHOD 2
	// use this mixin only on elements that have one direction margins
	// http://csswizardry.com/2012/06/single-direction-margin-declarations
	@if ($method == 2) {
    padding-top: $baseline-distance + $offset-top + em;
    margin-bottom: $line-height - $baseline-distance - $base-unit / $font-size + $offset-bottom + em;
  }
}
//···············································
// Small caps
//···············································
@mixin smallcaps() {
  font-size: 0.80em;
  font-weight: bolder;
  text-transform: uppercase;
  letter-spacing: 0.05em;
}
//···············································
// Drop caps
//···············································
@mixin dropcap() {
  float:left;
  font-size: 5.18em;
  font-weight: 300;
  line-height: 0.9em;
  padding: 0 .12em 0 0;
  position: relative;
  left: -0.2em;
  margin-top: 0.1em;
  margin-left: -0.08em;
  margin-bottom: -0.1em;
}
